"""
–ü—Ä–∏–∫–ª–∞–¥ –∫–ª—ñ—î–Ω—Ç–∞ –¥–ª—è AUTO.RIA MCP —Å–µ—Ä–≤–µ—Ä–∞
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python3.12 clients/pydantic_ai_auto_ria_search.py

–û—Ç—Ä–∏–º–∞–Ω–Ω—è API –∫–ª—é—á–∞:
https://developers.ria.com/account/
"""
import asyncio
import logfire
from pydantic_ai import Agent
from pydantic_ai.mcp import MCPServerStdio
from pydantic_ai.models.openai import OpenAIModel
from pydantic_ai.providers.openai import OpenAIProvider
from dotenv import load_dotenv
import os

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –æ—Ç–æ—á–µ–Ω–Ω—è
load_dotenv()

# –®–ª—è—Ö –¥–æ AUTO.RIA MCP —Å–µ—Ä–≤–µ—Ä–∞
mcp_server_script_path = 'servers/mcp-server-auto-ria-search.py'

# –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä MCPServerStdio –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ AUTO.RIA MCP —Å–µ—Ä–≤–µ—Ä–∞
mcp_server = MCPServerStdio(
    command="python",
    args=[mcp_server_script_path],
    tool_prefix="auto_ria"  # –ü—Ä–µ—Ñ—ñ–∫—Å –¥–ª—è —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ AUTO.RIA
)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ LLM (–º–æ–∂–µ—Ç–µ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Å–≤–æ—é –º–æ–¥–µ–ª—å)
llm = OpenAIModel(
    model_name="Qwen/Qwen3-32B-AWQ",  # –Ω–∞–∑–≤–∞ –≤–∞—à–æ—ó –º–æ–¥–µ–ª—ñ
    provider=OpenAIProvider(base_url='http://127.0.0.1:8000/v1'),  # URL vLLM/Ollama API
)

# –°—Ç–≤–æ—Ä—é—î–º–æ –∞–≥–µ–Ω—Ç pydantic_ai –∑ LLM —Ç–∞ AUTO.RIA MCP —Å–µ—Ä–≤–µ—Ä–æ–º
agent = Agent(llm, mcp_servers=[mcp_server])

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Logfire
logfire.configure(send_to_logfire=False)
logfire.instrument_pydantic_ai()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó AUTO.RIA MCP —Å–µ—Ä–≤–µ—Ä–∞"""

    async with agent.run_mcp_servers():
        print("üöó AUTO.RIA MCP Server Demo")
        print("=" * 50)

        # 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏
        print("\n1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏:")
        result = await agent.run('–Ø–∫—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ AUTO.RIA –¥–æ—Å—Ç—É–ø–Ω—ñ?')
        print(result.output)

        # 2. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ API –∫–ª—é—á (–∑–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π)
        # –û—Ç—Ä–∏–º–∞—Ç–∏ API –∫–ª—é—á –º–æ–∂–Ω–∞ –Ω–∞ https://api2.ria.com/
        api_key = os.getenv("AUTO_RIA_API_KEY", "your_api_key_here")
        print("api_key", api_key)

        print(f"\n2. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ API –∫–ª—é—á:")
        result = await agent.run(f'–í—Å—Ç–∞–Ω–æ–≤–∏ API –∫–ª—é—á AUTO.RIA: {api_key}')
        print(result.output)

        # 3. –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ–≤—ñ–¥–∫—É –ø–æ –ø–æ—à—É–∫—É
        print("\n3. –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ–≤—ñ–¥–∫—É –ø–æ –ø–æ—à—É–∫—É:")
        result = await agent.run('–ü–æ–∫–∞–∂–∏ –¥–æ–≤—ñ–¥–∫—É –ø–æ –ø–æ—à—É–∫—É AUTO.RIA')
        print(result.output)

        # 4. –ü—Ä–æ—Å—Ç–∏–π –ø–æ—à—É–∫ –∞–≤—Ç–æ
        print("\n4. –ü—Ä–æ—Å—Ç–∏–π –ø–æ—à—É–∫ –∞–≤—Ç–æ (–ø–µ—Ä—à—ñ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤):")
        result = await agent.run(
            '–ó–Ω–∞–π–¥–∏ –ø–µ—Ä—à—ñ 5 –æ–≥–æ–ª–æ—à–µ–Ω—å –ª–µ–≥–∫–æ–≤–∏—Ö –∞–≤—Ç–æ –Ω–∞ AUTO.RIA'
        )
        print(result.output)

        # 5. –ü–æ—à—É–∫ BMW –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        print("\n5. –∑–Ω–∞–π—Ç–∏ BMW 2005-2010")
        result = await agent.run(
            '–∑–Ω–∞–π—Ç–∏ BMW 2005-2010, –ø–æ–∫–∞–∂–∏ –ø–µ—Ä—à—ñ 3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏'
        )
        print(result.output)

        # 6. –ü–æ—à—É–∫ –∞–≤—Ç–æ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—é –∫–æ—Ä–æ–±–∫–æ—é
        print("\n6. –ü–æ—à—É–∫ –∞–≤—Ç–æ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—é –∫–æ—Ä–æ–±–∫–æ—é:")
        result = await agent.run(
            '–ó–Ω–∞–π–¥–∏ –∞–≤—Ç–æ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—é –∫–æ—Ä–æ–±–∫–æ—é –ø–µ—Ä–µ–¥–∞—á, —Ü—ñ–Ω–∞ –¥–æ 25000 USD'
        )
        print(result.output)

        # 7. –ü–æ—à—É–∫ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –º—ñ—Å—Ç—ñ (–ö–∏—ó–≤)
        print("\n7. –ü–æ—à—É–∫ –∞–≤—Ç–æ –≤ –ö–∏—î–≤—ñ:")
        result = await agent.run(
            '–ó–Ω–∞–π–¥–∏ –∞–≤—Ç–æ –≤ –ö–∏—î–≤—ñ –∑ –ø—Ä–æ–±—ñ–≥–æ–º –¥–æ 100 —Ç–∏—Å. –∫–º'
        )
        print(result.output)

        # 8. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –∞–≤—Ç–æ
        print("\n8. –û—Ç—Ä–∏–º—É–∞–π –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–≤—Ç–æ 38350052")
        result = await agent.run(
            '–û—Ç—Ä–∏–º—É–∞–π –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–≤—Ç–æ 38350052'
        )
        print(result.output)


if __name__ == "__main__":
    asyncio.run(main())
